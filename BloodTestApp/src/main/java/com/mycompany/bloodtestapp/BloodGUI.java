/*
 * BloodGUI.java
 *Author: Soheib 
 */
package com.mycompany.bloodtestapp;

import javax.swing.JOptionPane;

public class BloodGUI extends javax.swing.JFrame {

    //declare objects
    private PQInterface myPQueue;
    private SLList noShowList = new SLList();
    //create an instance of myArrayList
    myArrayList historyList = new myArrayList();

    public BloodGUI() {
        myPQueue = new MyPriorityQueue();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wardRbtn = new javax.swing.ButtonGroup();
        appTitleLbl = new javax.swing.JLabel();
        nameJLabel = new javax.swing.JLabel();
        priorityLbl = new javax.swing.JLabel();
        nameTf = new javax.swing.JTextField();
        gpTf = new javax.swing.JTextField();
        numPatientsBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        displayJLabel = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTa = new javax.swing.JTextArea();
        gpLbl = new javax.swing.JLabel();
        priorityTf = new javax.swing.JTextField();
        listBtn = new javax.swing.JButton();
        printNoShowBtn = new javax.swing.JButton();
        ageLbl = new javax.swing.JLabel();
        ageTf = new javax.swing.JTextField();
        gpLbl1 = new javax.swing.JLabel();
        noRb = new javax.swing.JRadioButton();
        yesRb = new javax.swing.JRadioButton();
        addNoShowBtn = new javax.swing.JButton();
        showHistoryBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appTitleLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        appTitleLbl.setForeground(new java.awt.Color(255, 0, 0));
        appTitleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appTitleLbl.setText("Blood Test Scheduler");

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nameJLabel.setForeground(new java.awt.Color(0, 51, 204));
        nameJLabel.setText("Patient's name:");

        priorityLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        priorityLbl.setForeground(new java.awt.Color(0, 51, 204));
        priorityLbl.setText("Set priority(Urgent/Medium/Low):");

        nameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTfActionPerformed(evt);
            }
        });

        numPatientsBtn.setText("No. of patients");
        numPatientsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numPatientsBtnActionPerformed(evt);
            }
        });

        addBtn.setText("Add patient to waiting list");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        removeBtn.setText("Next patient");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        displayJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        displayTa.setColumns(20);
        displayTa.setRows(5);
        jScrollPane1.setViewportView(displayTa);

        gpLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gpLbl.setForeground(new java.awt.Color(0, 51, 204));
        gpLbl.setText("GP Details:");

        priorityTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityTfActionPerformed(evt);
            }
        });

        listBtn.setText("Waiting patients");
        listBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBtnActionPerformed(evt);
            }
        });

        printNoShowBtn.setText("Print No Shows");
        printNoShowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printNoShowBtnActionPerformed(evt);
            }
        });

        ageLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ageLbl.setForeground(new java.awt.Color(0, 51, 204));
        ageLbl.setText("Patient's Age:");

        ageTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTfActionPerformed(evt);
            }
        });

        gpLbl1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gpLbl1.setForeground(new java.awt.Color(0, 51, 204));
        gpLbl1.setText("Are they from the Hospital ward?");

        wardRbtn.add(noRb);
        noRb.setText("No");
        noRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noRbActionPerformed(evt);
            }
        });

        wardRbtn.add(yesRb);
        yesRb.setText("Yes");
        yesRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesRbActionPerformed(evt);
            }
        });

        addNoShowBtn.setText("Add No Show");
        addNoShowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNoShowBtnActionPerformed(evt);
            }
        });

        showHistoryBtn.setText("History");
        showHistoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHistoryBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(displayJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameJLabel)
                            .addComponent(ageLbl)
                            .addComponent(gpLbl)
                            .addComponent(gpLbl1)
                            .addComponent(priorityLbl))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ageTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(gpTf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priorityTf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTf)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(yesRb)
                                .addGap(18, 18, 18)
                                .addComponent(noRb)))))
                .addGap(0, 28, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appTitleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(listBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addNoShowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(printNoShowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(numPatientsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showHistoryBtn)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(appTitleLbl)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gpLbl1)
                    .addComponent(noRb)
                    .addComponent(yesRb))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gpLbl)
                    .addComponent(gpTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priorityLbl)
                    .addComponent(priorityTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showHistoryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numPatientsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(printNoShowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addNoShowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(displayJLabel))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTfActionPerformed
//display the number of patients in the queue
    private void numPatientsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numPatientsBtnActionPerformed
        // TODO add your handling code here:
        displayTa.append("There are " + myPQueue.size() + " patients on the waiting list\n");
    }//GEN-LAST:event_numPatientsBtnActionPerformed

    // adds a patient to the queue
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        //declare variables
        String name, gp;
        String priority;
        int age;
        boolean fromWard;
        try {
            //get tect from name,GP and age text fields
            name = nameTf.getText();
            gp = gpTf.getText();
            age = Integer.parseInt(ageTf.getText());
            //get value of radio buttin
            fromWard = yesRb.isSelected();
            priority = priorityTf.getText();

            //create new patient object
            //set the patient's details
            Patient newPatient = new Patient();
            newPatient.setName(name);
            newPatient.setGp(gp);
            newPatient.setAge(age);
            newPatient.setFromHospitalWard(fromWard);

            //add the patient to the history list
            historyList.add(newPatient);
            //add the patient to the queue
            myPQueue.enqueue(priority, newPatient);
            
            //print a success message
            displayTa.append(nameTf.getText() + " has been successfully added to the waiting list\n");
            nameTf.setText("");
            gpTf.setText("");
            priorityTf.setText("");
            ageTf.setText("");
        }
        //catches a NumberFormatException error if one of the text fields are empty
        catch(NumberFormatException e)  {
            JOptionPane.showMessageDialog(null, "Please Fill in All Above Fields");
            //System.out.println("Error"+ e);
        }

    }//GEN-LAST:event_addBtnActionPerformed
//dequeues the patient with the highest priority
    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
        //checks if the queue is not empty
        if (!myPQueue.isEmpty()) {
            //get the pqElement that is being dequeued 
            PQElement pqElement = (PQElement) myPQueue.dequeue();
            //create an instance of a patient and give it the value of the patient being dequeued
            Patient patient = (Patient) pqElement.getPatient();
            
            //display the patient's details on the displayTa text area
            displayTa.append("The doctor will now see " + patient.getName() + "\n");
            displayTa.append("Age: " + patient.getAge() + "\n");
            displayTa.append("From Hospital Ward?: " + patient.isFromHospitalWard() + "\n");
            displayTa.append("GP Details: " + patient.getGp() + "\n");
            displayTa.append("Their priority is: " + pqElement.getPriority() + "\n");

        } else //if the queue is empty display a message
            displayTa.append("There are no patients waiting!\n");
    }//GEN-LAST:event_removeBtnActionPerformed
//closes the application
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void priorityTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priorityTfActionPerformed
//lists all of the patients in the queue to the displayTa
    private void listBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBtnActionPerformed
        // TODO add your handling code here:
        displayTa.append("The patients on the waiting list are...\n");
        displayTa.append(myPQueue.printPQueue() + "\n");
    }//GEN-LAST:event_listBtnActionPerformed

    //prints all of the patients from the noShow list into the display text area
    private void printNoShowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printNoShowBtnActionPerformed
        // TODO add your handling code here:
        String noShowListStr = noShowList.listElements((Node) noShowList.get(0));

        if (noShowListStr.isEmpty()) {
            displayTa.append("There are no patients on the No Show list.\n");
        } else {
            displayTa.append("\nNo Show List:\n" + noShowListStr);
        }
    }//GEN-LAST:event_printNoShowBtnActionPerformed

    private void ageTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTfActionPerformed

    private void noRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noRbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noRbActionPerformed

    private void yesRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesRbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yesRbActionPerformed

//a button for adding a patient by name to the no show list
    private void addNoShowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNoShowBtnActionPerformed
        //JOptionPane to get the patient's name
        String patientName = JOptionPane.showInputDialog(this, "Enter the patient's name who missed the appointment:");

        //Checks if the name inpur is not empty
        if (patientName != null && !patientName.isEmpty()) {
            boolean found = false;

            //Traverse through the priority queue to find the patient by name
            for (int i = 0; i < myPQueue.size(); i++) {
                PQElement pqElement = (PQElement) myPQueue.getElement(i); // access the patient at index i
                Patient patient = pqElement.getPatient(); // Get the patient from the PQElement

                // Iff the patient's name matches the input, add them to the noShow list
                if (patient.getName().equalsIgnoreCase(patientName)) {
                    //add the patient to the No Show list
                    noShowList.add(patient);
                    displayTa.append(patient.getName() + " has been added to the No Show list.\n");
                    found = true;
                    break;  //break the loop once the patient is found and added
                }
            }

            if (!found) {
                displayTa.append("No patient found with the name: " + patientName + "\n");
            }
        } else {
            displayTa.append("No name entered.\n");
        }
    }//GEN-LAST:event_addNoShowBtnActionPerformed
//prints all patients' details that have been processed even if they no longer exist in the queue
    private void showHistoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showHistoryBtnActionPerformed
        // TODO add your handling code here:
        displayTa.append("\nHistory of Past and Current Patients\n");
        
        displayTa.append(historyList.listElements());
        
    }//GEN-LAST:event_showHistoryBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton addNoShowBtn;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTf;
    private javax.swing.JLabel appTitleLbl;
    private javax.swing.JLabel displayJLabel;
    private javax.swing.JTextArea displayTa;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel gpLbl;
    private javax.swing.JLabel gpLbl1;
    private javax.swing.JTextField gpTf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listBtn;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameTf;
    private javax.swing.JRadioButton noRb;
    private javax.swing.JButton numPatientsBtn;
    private javax.swing.JButton printNoShowBtn;
    private javax.swing.JLabel priorityLbl;
    private javax.swing.JTextField priorityTf;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton showHistoryBtn;
    private javax.swing.ButtonGroup wardRbtn;
    private javax.swing.JRadioButton yesRb;
    // End of variables declaration//GEN-END:variables

}
